[{"D:\\VS Code\\TODO\\client\\src\\index.tsx":"1","D:\\VS Code\\TODO\\client\\src\\App.tsx":"2","D:\\VS Code\\TODO\\client\\src\\components\\InputTodo.tsx":"3","D:\\VS Code\\TODO\\client\\src\\components\\ListTodo.tsx":"4","D:\\VS Code\\TODO\\client\\src\\components\\EditTodo.tsx":"5"},{"size":219,"mtime":1616805121217,"results":"6","hashOfConfig":"7"},{"size":347,"mtime":1616891622444,"results":"8","hashOfConfig":"7"},{"size":1049,"mtime":1616905648330,"results":"9","hashOfConfig":"7"},{"size":2069,"mtime":1616898275998,"results":"10","hashOfConfig":"7"},{"size":2664,"mtime":1616900707004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1v2az4a",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"D:\\VS Code\\TODO\\client\\src\\index.tsx",[],["24","25"],"D:\\VS Code\\TODO\\client\\src\\App.tsx",[],"D:\\VS Code\\TODO\\client\\src\\components\\InputTodo.tsx",["26"],"D:\\VS Code\\TODO\\client\\src\\components\\ListTodo.tsx",["27"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodo = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  //delete todo function\r\n  const deleteTodo = async (id: number) => {\r\n    try {\r\n      const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  const getTodos = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/todos\");\r\n      const jsonData = await response.json();\r\n\r\n      setTodos(jsonData);\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTodos();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <table className=\"table table table-hover mt-5 text-center\">\r\n        <thead>\r\n          <tr>\r\n            <th>S No.</th>\r\n            <th>Date</th>\r\n            <th>Description</th>\r\n            <th>Time</th>\r\n            <th>Edit</th>\r\n            <th>Delete</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {todos.map((todo: any, index) => (\r\n            <tr key={todo.id}>\r\n              <td>{1 + index}</td>\r\n              <td>\r\n                {todo.timerecorded.substring(8, 10) +\r\n                  todo.timerecorded.substring(4, 8) +\r\n                  todo.timerecorded.substring(0, 4)}\r\n              </td>\r\n              <td>{todo.description}</td>\r\n              <td>{todo.timerecorded.substring(11, 19)}</td>\r\n              <td>\r\n                <EditTodo todo={todo}></EditTodo>\r\n              </td>\r\n              <td>\r\n                <button\r\n                  className=\"btn btn-danger\"\r\n                  onClick={() => deleteTodo(todo.id)}\r\n                >\r\n                  <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\r\n                </button>{\" \"}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ListTodo;\r\n","D:\\VS Code\\TODO\\client\\src\\components\\EditTodo.tsx",[],{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":10,"column":13,"nodeType":"34","messageId":"35","endLine":10,"endColumn":21},{"ruleId":"32","severity":1,"message":"36","line":10,"column":13,"nodeType":"34","messageId":"35","endLine":10,"endColumn":23},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"@typescript-eslint/no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]