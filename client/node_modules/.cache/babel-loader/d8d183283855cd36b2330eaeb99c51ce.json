{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code\\\\TODO\\\\client\\\\src\\\\components\\\\InputTodo.tsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputTodo = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [description, setDescription] = useState(\"\");\n\n  const onSubmitForm = async e => {\n    _s();\n\n    e.preventDefault();\n    useEffect(() => {\n      const body = description;\n      const request = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      };\n      fetch(\"http://localhost:5000/todos\", request).then(async response => {\n        const data = await response.json();\n\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = data && data.message || response.status;\n          return Promise.reject(error);\n        }\n      }).catch(err => {\n        console.error(err.message);\n      });\n    }, []);\n  };\n\n  _s(onSubmitForm, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mt-5\",\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"d-flex mt-5\",\n        onSubmit: onSubmitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: description,\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(InputTodo, \"h9D/T9lgpWSoHPGgGzJJBrwKHw4=\");\n\n_c = InputTodo;\nexport default InputTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputTodo\");","map":{"version":3,"sources":["D:/VS Code/TODO/client/src/components/InputTodo.tsx"],"names":["React","Fragment","useState","useEffect","InputTodo","description","setDescription","onSubmitForm","e","preventDefault","body","request","method","headers","JSON","stringify","fetch","then","response","data","json","ok","error","message","status","Promise","reject","catch","err","console","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAAA;;AACtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMK,YAAY,GAAG,MAAOC,CAAP,IAAkB;AAAA;;AACrCA,IAAAA,CAAC,CAACC,cAAF;AAEAN,IAAAA,SAAS,CAAC,MAAM;AACd,YAAMO,IAAI,GAAGL,WAAb;AACA,YAAMM,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdC,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SAFK;AAGdH,QAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AAHQ,OAAhB;AAMAM,MAAAA,KAAK,CAAC,6BAAD,EAAgCL,OAAhC,CAAL,CACGM,IADH,CACQ,MAAOC,QAAP,IAAoB;AACxB,cAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;;AAEA,YAAI,CAACF,QAAQ,CAACG,EAAd,EAAkB;AAChB;AACA,gBAAMC,KAAK,GAAIH,IAAI,IAAIA,IAAI,CAACI,OAAd,IAA0BL,QAAQ,CAACM,MAAjD;AACA,iBAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;AACF,OATH,EAUGK,KAVH,CAUUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACP,KAAR,CAAcM,GAAG,CAACL,OAAlB;AACD,OAZH;AAaD,KArBQ,EAqBN,EArBM,CAAT;AAsBD,GAzBD;;AAHsB,KAGhBhB,YAHgB;;AA6BtB,sBACE,QAAC,QAAD;AAAA,2BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,QAAQ,EAAEA,YAAxC;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,SAAS,EAAC,cAFZ;AAGE,UAAA,KAAK,EAAEF,WAHT;AAIE,UAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACsB,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA7CD;;IAAM3B,S;;KAAAA,S;AA+CN,eAAeA,SAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nconst InputTodo = () => {\r\n  const [description, setDescription] = useState(\"\");\r\n\r\n  const onSubmitForm = async (e: any) => {\r\n    e.preventDefault();\r\n\r\n    useEffect(() => {\r\n      const body = description;\r\n      const request = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body),\r\n      };\r\n\r\n      fetch(\"http://localhost:5000/todos\", request)\r\n        .then(async (response) => {\r\n          const data = await response.json();\r\n\r\n          if (!response.ok) {\r\n            // get error message from body or default to response status\r\n            const error = (data && data.message) || response.status;\r\n            return Promise.reject(error);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.error(err.message);\r\n        });\r\n    }, []);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div>\r\n        <h1 className=\"text-center mt-5\">To-Do List</h1>\r\n        <form className=\"d-flex mt-5\" onSubmit={onSubmitForm}>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <button className=\"btn btn-success\">Add</button>\r\n        </form>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default InputTodo;\r\n"]},"metadata":{},"sourceType":"module"}